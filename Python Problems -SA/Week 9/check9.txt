check9.txt

Edit this file and then submit it to autolab.

Be sure to watch the videos very carefully, and not just
skip ahead to the parts required to answer these questions!

Be *very brief* in your answers!  Seriously.  Brief.

---------------------------------------------------------------------

1. Your full name and andrew id:

Shivum Agarwal shivuma

2. The full names and andrew ids of your groupmates, if you worked in a group.

3. Dates/times that you watched the videos listed in check9.html (fill this out as you go):

	10:58-11:17; OOP 
	11:17-11:50; Recursion

4. Total time this check required (fill this out when you are done):
 
	Roughly 1 hour

5. Object-Oriented Programming Questions:

5.1 What is the different between an instance and a class?
A class is a blueprint used to create objects, an instance is a unique copy of the class that represents the object.

5.2 In the video about testing equality of objects, why did A(5) == 9 initially crash?

because it called A(5) = 9.x, 9.x does not make any sense

5.3 Why doesn't our code crash when we call A('yellow', True), even though our __init__ function has three parameters?

self is not something passed through, self is a reference to the instance being created.

5.4 Why should we write __repr__ instead of __str__ in most cases?

Use repr because it can return a readable version of the instance. It is more flexible as well.

5.5 Write a one-line __hash__ method for a class, Book, which has two variables, title and author.

def_hash_(self):
	return hash((self.title ,self.author))


6. Recursion:

6.1 Pick an example from the 'Popular Recursion' section and explain why it is recursive.
	
	recursion in google, keeps calling “did you mean recursion?” keeps going over and over again.

6.2 Why do all (non-infinite) recursive functions need to have a base case?

	It would create an infinite recursive function and this would lead to stack overflow. Need a case where there is no way to be recursive.

6.3 In 'Recursive Math', what's the functional difference between the function f5 and the function f7?

In f5, the difference in between numbers increments while in f7, the difference multiplies, 

6.4 Why is the base case for the recursive function power different from the base cases of rangeSum and listSum?

	Because for power, if you multiply by 0 for the base case, it will multiply every value by 0 and thus mess it up completely.	

6.5 Add a print statement to the top of the basic rangeSum and the divide-and-conquer rangeSum, and count how many times each function is called on the same input. Describe what you observe and do your best to explain it.

The print statement is called seven times and this is likely because it is printed once at the call of each rangeSum. Initial call is one print, and it continues six more times during the recursion.

6.6 Section 9 shows how functions can be implemented in both iterative and recursive ways. Of course, there can be multiple different iterative and recursive approaches to solve a problem. Describe two approaches, one iterative and one recursive, which you could use to solve the second example, reverse. These approaches should be different than the ones shown on the website.
	One way could be to loop from the end of the string to the beginning and putting each character in that order into a new string that consists of the actual reversal.

	The next way is to recursively print each character by popping the last element as it is constantly called.

	
